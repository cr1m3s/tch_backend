// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: advertisement.sql

package queries

import (
	"context"
	"time"
)

const createAdvertisement = `-- name: CreateAdvertisement :one
INSERT INTO advertisements (
  title,
  provider,
  attachment,
  experience,
  category,
  time,
  price,
  format,
  language,
  description,
  mobile_phone,
  email,
  telegram,
  created_at
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14
)
RETURNING id, title, provider, attachment, experience, category, time, price, format, language, description, mobile_phone, email, telegram, created_at
`

type CreateAdvertisementParams struct {
	Title       string    `json:"title"`
	Provider    string    `json:"provider"`
	Attachment  string    `json:"attachment"`
	Experience  string    `json:"experience"`
	Category    string    `json:"category"`
	Time        string    `json:"time"`
	Price       int32     `json:"price"`
	Format      string    `json:"format"`
	Language    string    `json:"language"`
	Description string    `json:"description"`
	MobilePhone string    `json:"mobile_phone"`
	Email       string    `json:"email"`
	Telegram    string    `json:"telegram"`
	CreatedAt   time.Time `json:"created_at"`
}

func (q *Queries) CreateAdvertisement(ctx context.Context, arg CreateAdvertisementParams) (Advertisement, error) {
	row := q.db.QueryRow(ctx, createAdvertisement,
		arg.Title,
		arg.Provider,
		arg.Attachment,
		arg.Experience,
		arg.Category,
		arg.Time,
		arg.Price,
		arg.Format,
		arg.Language,
		arg.Description,
		arg.MobilePhone,
		arg.Email,
		arg.Telegram,
		arg.CreatedAt,
	)
	var i Advertisement
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Provider,
		&i.Attachment,
		&i.Experience,
		&i.Category,
		&i.Time,
		&i.Price,
		&i.Format,
		&i.Language,
		&i.Description,
		&i.MobilePhone,
		&i.Email,
		&i.Telegram,
		&i.CreatedAt,
	)
	return i, err
}
